import java.util.ArrayList;

public class Airport
{
    /** A list of the flights into and out of this airport
     *  Guaranteed not to be null and to contain only non-null entries
     */
    private ArrayList<Flight> allFlights;

    public Airport(ArrayList<Flight> flights)
    {
        allFlights = flights;
    }

    public ArrayList<Flight> getAllFlights()
    {
        return allFlights;
    }

    /** Returns the revenue generated by all flights at the airport,
     *  as described in part (a)
     */
    public double getTotalRevenue()
    {
        double total =0;
        /* to be implemented in part (a) */
        for(Flight flights: allFlights){
            if (flights.getCapacity() < flights.getNumPassengers()) {
                total += flights.getCapacity() * flights.getPrice();
            } else {
                total += flights.getNumPassengers() * flights.getPrice();
            }
        }
            return total;
        }


    /** Updates the list of flights by removing certain flights and
     *  returns the total number of passengers whose flights were removed,
     *  as described in part (b)
     */
    public int updateFlights()
    {
        /* to be implemented in part (b) */
        int count =0;
        for (int i = allFlights.size()-1; i>=0;i--){
            Flight flights = allFlights.get(i);
            if (flights.getNumPassengers()<(flights.getCapacity()*0.2)){
                count+=flights.getNumPassengers();
                allFlights.remove(i);
            }
        }
        return count;
    }
}
